---
# IMPORTANT:
# These tasks are run for each Check_MK site defined
# in `checkmk_server__sites`. This means they can run multiple
# times per server. If the monitoring site is a remote slave,
# they might even run on a different server. The site configuration
# is available through `site_item`.

- name: Site configuration via omd
  block:

  - name: Get Check_MK site version
    command: omd version '{{ site_item.name }}'
    register: checkmk_server__register_site_version
    changed_when: False
    check_mode: no

  - name: Trigger site version update
    set_fact:
      checkmk_server__fact_update: '{{ site_item.update and
                                       ((checkmk_server__register_site_version.stdout.split(" ")[-1] | splitext)[0] |
                                        version_compare(site_item.version, "<")) }}'
    check_mode: no

  - name: Check cron.allow file
    stat:
      path: '/etc/cron.allow'
    register: checkmk_server__register_cron

  - name: Grant cron permissions to Check_MK user
    lineinfile:
      dest: '/etc/cron.allow'
      line: '{{ site_item.user }}'
      regexp: '^{{ site_item.user }}$'
    when: checkmk_server__register_cron.stat.exists
    notify: [ 'Restart Check_MK' ]

  - name: Query OMD configuration
    command: omd config '{{ site_item.name }}' show '{{ item.var }}'
    with_items: '{{ site_item.omd_config }}'
    register: checkmk_server__register_omd_config
    changed_when: False
    check_mode: no

  - name: Shutdown Check_MK site (if required)
    command: omd stop '{{ site_item.name }}'
    when: (not (item.item.value|string) == item.stdout) or
          checkmk_server__fact_update|d(False)
    with_items: '{{ checkmk_server__register_omd_config.results
                    if not "failed" in checkmk_server__register_omd_config else [] }}'
    register: checkmk_server__register_omd_stop

  - name: Run Check_MK site update
    command: omd --force update '{{ site_item.name }}'
    when: checkmk_server__fact_update|d(False)

  - name: Set OMD site properties
    command: omd config '{{ site_item.name }}' set '{{ item.item.var }}' '{{ item.item.value }}'
    when: not item.stdout == (item.item.value|string)
    with_items: '{{ checkmk_server__register_omd_config.results
                    if not "failed" in checkmk_server__register_omd_config else [] }}'

  - name: Enable Check_MK service
    service:
      name: 'check-mk-raw-{{ site_item.version
                             if checkmk_server__fact_update|d()
                             else (checkmk_server__register_site_version.stdout.split(" ")[-1] | splitext)[0] }}'
      enabled: yes
    ignore_errors: '{{ ansible_check_mode }}'

  - name: Start Check_MK site (if required)
    command: omd start '{{ site_item.name }}'
    when: checkmk_server__register_omd_stop | changed

  # delegate block
  delegate_to: '{{ site_item.delegate_to
                   if (not site_item.delegate_to == inventory_hostname) else omit }}'
